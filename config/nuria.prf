include(nuriavars.prf)

# Add depend and include path..
DEPENDPATH      += $${NURIA_INSTALL_HEADERS}
INCLUDEPATH     += $${NURIA_INSTALL_HEADERS}

QMAKE_RPATHDIR  += $${NURIA_INSTALL_LIBS}
macx:LIBS       += -F$${NURIA_INSTALL_LIBS}
LIBS            += -L$${NURIA_INSTALL_LIBS}

# The NuriaFramework requires C++11
CONFIG += c++11

# Generate libc/libc++ include path for tria on Windows
win32 {
  !contains(QMAKE_CXX, g++): error("MSVC is not supported at this time.")
  GCC_VERSION = $$system($$QMAKE_CXX -dumpversion)
  GCC_MACHINE = $$system($$QMAKE_CXX -dumpmachine)
  GCC_PATH = $$system(where $$QMAKE_CXX)
  GCC_PATH = $$split(GCC_PATH, \r\n)
  GCC_PATH = $$first(GCC_PATH)
  GCC_PATH = $$dirname(GCC_PATH)
  GCC_PATH = $$absolute_path($${GCC_PATH}/..)
 
  TRIA_LIB_INCLUDES += \
    $${GCC_PATH}/lib/gcc/$${GCC_MACHINE}/$${GCC_VERSION}/include \
    $${GCC_PATH}/lib/gcc/$${GCC_MACHINE}/$${GCC_VERSION}/include-fixed \
    $${GCC_PATH}/lib/gcc/$${GCC_MACHINE}/$${GCC_VERSION}/include/c++ \
    $${GCC_PATH}/lib/gcc/$${GCC_MACHINE}/$${GCC_VERSION}/include/c++/$${GCC_MACHINE} \
    $${GCC_PATH}/$${GCC_MACHINE}/include \
    $${GCC_PATH}/$${GCC_MACHINE}/include/c++ \
    $${GCC_PATH}/$${GCC_MACHINE}/include/c++/$${GCC_MACHINE} \
    $${GCC_PATH}/include
}

# Let tria run over all headers
contains(NURIA_MODULES, Tria) {
  tria.output       = tria_${QMAKE_FILE_BASE}.cpp
  tria.variable_out = GENERATED_SOURCES
  tria.variables    = INCLUDEPATH TRIA_FLAGS
  tria.commands     = $$NURIA_TRIA_BIN -o${QMAKE_FILE_OUT} $(TRIA_FLAGS) ${QMAKE_FILE_NAME} $$join(INCLUDEPATH, " -I", "-I") $${TRIA_LIB_INCLUDES}
  tria.input        = HEADERS
  QMAKE_EXTRA_COMPILERS += tria
}

# Modules
contains(NURIA, network) {
    contains(NURIA_MODULES, Network):DEFINES += NURIA_NETWORK_LIB
    else:warning(NuriaFramework was built without Network)
    
    LIBS += -lNuriaNetwork
    NURIA += core
    QT += network
    
}

contains(NURIA, lua) {
    contains(NURIA_MODULES, Lua):DEFINES += NURIA_LUA_LIB
    else:warning(NuriaFramework was built without Lua)
    
    LIBS += -lNuriaLua
    NURIA += core
    
}

contains(NURIA, twig) {
    contains(NURIA_MODULES, Twig):DEFINES += NURIA_TWIG_LIB
    else:warning(NuriaFramework was built without Twig)
    
    LIBS += -lNuriaTwig
    NURIA += core
    
}

contains(NURIA, core) {
    contains(NURIA_MODULES, Core):DEFINES += NURIA_CORE_LIB
    else:warning(NuriaFramework was built without Core)
    
    LIBS += -lNuriaCore
    
}
